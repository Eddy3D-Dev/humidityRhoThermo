/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      fvOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

/*sourceHumidity
{
    type            scalarSemiImplicitSource;

    timeStart       0.;
    duration        3.0;
    selectionMode   all;
    cellZone        zone;


    volumeMode      specific;
    injectionRateSuSp
    {
        thermo:specificHumidity   (0.00777 0); // kg/s
    }
}
*/

humiditySource
{
    type            scalarCodedSource;

    active          yes;

    name    humiditySource;

    scalarCodedSourceCoeffs
    {
        selectionMode   all;

        fields          (thermo:specificHumidity);

        codeInclude
        #{
        #};

        codeCorrect
        #{
            Pout<< "**codeCorrect**" << endl;
        #};

        codeAddSup
        #{
            //- Absolute humidity source [kg/s]
            const scalar sourceAbsolute = 1.9167e-4;

            //- TODO Build specific source (divide by cellZone Volume)
            const scalar source = sourceAbsolute/1;

            //- Get volume
            const scalarField& V = mesh_.V();

            //- Get timestep 
            const scalar dt = mesh_.time().value();

            //- Get access to the source term
            scalarField& specHumSource = eqn.source();

            //- Get the actual absolute humidity values of each cell
            const scalarField& specHum =
                mesh().thisDb().lookupObject<volScalarField>
                (
                    "thermo:specificHumidity"
                );

            //- Get the actual absolute humidity values of each cell
            const scalarField& rho1 =
                mesh().thisDb().lookupObject<volScalarField>
                (
                    "thermo:rho"
                );

            //- Source gets the difference of humidity
            //  The adding of humidity is equal to the difference
            //  as people breath in and out
            Info<< "Actual: " << specHum[0] << endl;
            Info<< "Source: " << V[0]*source/rho1[0]*dt << endl;
            specHumSource -= V*(source/rho1 - specHum);

        #};

        codeConstrain
        #{
            Pout<< "**codeSetValue**" << endl;
        #};
    }

    sourceTimeCoeffs
    {
        $scalarCodedSourceCoeffs;
    }
}


// ************************************************************************* //
